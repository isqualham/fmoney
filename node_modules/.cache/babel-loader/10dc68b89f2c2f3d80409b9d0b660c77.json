{"ast":null,"code":"var _jsxFileName = \"C:\\\\Isqualham\\\\reactJS\\\\fmoney\\\\src\\\\TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport { api } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext([]);\nexport function TransactionsProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: transactions,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TransactionsProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["C:/Isqualham/reactJS/fmoney/src/TransactionsContext.tsx"],"names":["createContext","useEffect","useState","api","TransactionsContext","TransactionsProvider","children","transactions","setTransactions","get","then","response","data"],"mappings":";;;AAAA,SAAQA,aAAR,EAAuBC,SAAvB,EAAkCC,QAAlC,QAA4D,OAA5D;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAeA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAAgB,EAAhB,CAAzC;AAEP,OAAO,SAASK,oBAAT,OAAoE;AAAA;;AAAA,MAAtC;AAACC,IAAAA;AAAD,GAAsC;AAEvE,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAgB,EAAhB,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,GAAG,CAACM,GAAJ,CAAQ,cAAR,EACCC,IADD,CACMC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CADjC;AAEH,GAHQ,EAGP,EAHO,CAAT;AAKA,sBACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEA,YAArC;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAfeD,oB;;KAAAA,oB","sourcesContent":["import {createContext, useEffect, useState, ReactNode} from 'react';\r\nimport { api } from './services/api';\r\n\r\ninterface Transaction{\r\n    id:number;\r\n    title:string;\r\n    amount:number;\r\n    type:string;\r\n    category:string;\r\n    createdAt:string;\r\n}\r\n\r\ninterface TransactionsProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\nexport const TransactionsContext = createContext<Transaction[]>([]);\r\n\r\nexport function TransactionsProvider({children}: TransactionsProviderProps){\r\n\r\n    const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n\r\n    useEffect(() => {\r\n        api.get('transactions')\r\n        .then(response => setTransactions(response.data.transactions))\r\n    },[]);\r\n\r\n    return(\r\n        <TransactionsContext.Provider value={transactions}>\r\n            {children}\r\n        </TransactionsContext.Provider>\r\n    )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}